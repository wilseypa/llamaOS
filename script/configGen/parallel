# FileName: parallel.config 

# Purpose : This is a configuration file that the simulation kernel
#           requires for configuring the different components in the 
#           simulation kernel.

# Notes   : Empty lines are ignored; a comment is indicated by a "#".

# Do you want debugging information to be shown
# Note: You will have to build with the -DDEVELOPER_ASSERTIONS flag turned
#       on before you can use this option.
# Choices:
# [a] True or False
#Debug : true #This dosent seem to work, build flag does not exist  

ParallelDebug {
	#Put every CPU into a loop that could only break out in gdb.  
	#To Use: set true and
	#Kick off a simulation, all sim managers will be sitting there spinning,
	#Attach on every CPU with gdb, and then break them out and you could watch
	#every CPU in gdb simultaneously. Use: "set x=0" in gdb to break the while loop
 	SpinBeforeSimulationStart : False
}

# Simulation Options:
# 	TimeWarp, 	 (Single thread TimeWarp simulation)
#	ThreadedTimeWarp       (TimeWarp with multiple threads executing objects)
#	Sequential	 (Single thread sequential simulation)
Simulation : TimeWarp 

#TimeWarp Scope
TimeWarp {
  ###
  # ThreadControl:
  # WorkerThreadCount : Integer value for the number of worker threads
  # SyncMechanism Options:
  # 	ATOMICLOCK
  # 	MUTEX
  # LoadBalancing Options : Load balancing needed or not (ON or OFF)
  # LoadBalancingMetric Options : Type of load balancing algorithm :-
  # 	EventExecutionRatio
  # LoadBalancingTrigger Options : Type of load balancing trigger :-
  # 	Rollback
  # 	MasterPoll
  # LoadBalancingInterval : Minimum waiting time (in secs) between readings
  ThreadControl {
    WorkerThreadCount : 2
    SyncMechanism : MUTEX
    LoadBalancing : OFF
    LoadBalancingMetric : EventExecutionRatio
    LoadBalancingTrigger : Rollback
    LoadBalancingInterval : 3
  }
  
  # Type Options:
  # 	Default, MultiSet (must use if using MultiSet event list)
  # ThreadedTimewarp has only Multiset Scheduler
  # Overall Schedule Queue Scheme Options:
  # 	MULTISET
  # 	LADDERQ
  # 	SPLAYTREE
  # Ladder Queue Causality (not available for the other queues):
  # 	STRICT
  # 	RELAXED
  # Schedule Queue count (changed based on WorkerThreadCount)
  Scheduler {
    Type : MultiSet
    ScheduleQScheme : MULTISET
    CausalityType : STRICT
    ScheduleQCount : 1
  }
  
  # EventList:
  # Type Options:
  # 	Default, MultiSet, Threaded
  # ThreadedTimewarp has only Multiset EventList
  EventList {
    Type : MultiSet
  }

  # CommunicationManager:
  # PhysicalLayer Options:
  # 	MPI 		requires (--enable-timewarp)
  # 	TCPSelect  	requires (--enable-timewarp)
  # 	UDPSelect  	requires (--enable-timewarp), not implemented yet
  # Type Options:
  # 	Default
  # 	MessageAggregating - Not fully implemented yet.
  CommunicationManager { 
    PhysicalLayer: MPI
    Type : Default
  }
	
  # StateManager:
  # Type Options:
  #	Periodic, Adaptive
  # Period Format:
  # 	Must be an integer value
  StateManager {
    Type: Periodic
    Period : 10
  }

  # OutputManager:
  # Type Options:
  # 	Lazy, Dynamic, Aggressive 
  # AntiMessages Options: 
  # 	Default
  #	One
  # FilterDepth, AggrToLazyRatio, LazyToAggrRatio & ThirdThreshold
  # are used for Dynamic Cancellation
  OutputManager {
    Type : Aggressive
    AntiMessages: Default
    FilterDepth : 16
    AggrToLazyRatio : 0.5
    LazyToAggrRatio : 0.2
    ThirdThreshold : 0.1
  }

  # GVTManager
  # Type Options:
  # 	Mattern, AtomicMattern
  # Period format:
  # 	Must be an integer value
  GVTManager {
    Type : Mattern
    Period : 1000
  }

  # Optimistic Fossil Collection Manager
  # Type Options:
  #     None, Cheby
  OptFossilCollManager {
    Type : None
    CheckpointTime : 10000
    MinimumSamples : 64
    MaximumSamples : 100
    DefaultLength : 2000
    AcceptableRisk : 0.99
  }

  # DVFS Manager
  # See Ryan Child's MS thesis
  #
  # Type: None | Shared | Distributed
  #   None - do not use DVFS
  #   Shared - LP0 sets frequencies of all other LPs
  #   Distributed - each LP sets its own frequency
  # Algorithm: Fixed | Performance | Power | Hybrid
  #   Various DVFS algorithms, see DVFSManager.h for details
  # UsefulWorkMetric: Rollbacks | EffectiveUtilization | RollbackFraction
  #   Various useful work metrics, see DVFSManager.h for details
  # Threshold: Float
  #   Minimum distance from average the Useful Work Index must be for possible 
  #   frequency adjustment
  # DebugPrint: True | False
  #   Whether to print useful work / frequency information each cycle
  # Period: Integer
  #   Interval in seconds at which to measure useful work and change freqs
  # FIRSize: Integer
  #   Size of FIR filter on the useful work whose output is used to set freqs
  DVFSManager {
    Type: None
    Algorithm: Performance
    UsefulWorkMetric: RollbackFraction
    Threshold: 0.1
    DebugPrint: False
    Period: 1
    FIRSize: 1
  }
}

































































































































































































































































































































































































































































































































































































