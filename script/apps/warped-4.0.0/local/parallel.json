{
// SpinBeforeConfiguration and SpinBeforeSimulationStart will cause the
// simulation to enter an infinite loop before configuration, and between
// configuration and simulation start, respecively.
// To Use:
// Start a simualtion and attatch to the running process with GDB once
// attached, you can continue the simualtion by using "set x=0" in GDB.
"ParallelDebug": {
    "SpinBeforeSimulationStart": false
},
"SpinBeforeConfiguration": false,

// Simulation Options:
//   TimeWarp : Single thread TimeWarp simulation
//   ThreadedTimeWarp : TimeWarp with multiple threads executing objects
//   Sequential : Single thread sequential simulation
"Simulation": "TimeWarp",

//TimeWarp Scope
"TimeWarp": {
    // ThreadControl:
    // WorkerThreadCount : Integer value for the number of worker threads
    // SyncMechanism Options:
    //     AtomicLock
    //     Mutex
    // WorkerThreadMigration : Worker thread migration needed or not (true or false)
    // LoadBalancing Options : Load balancing needed or not (true or false)
    // LoadBalancingMetric Options : Type of load balancing algorithm :-
    //     EventExecutionRatio
    // LoadBalancingTrigger Options : Type of load balancing trigger :-
    //     Rollback
    //     MasterPoll
    // LoadBalancingInterval : Minimum waiting time (in secs) between readings
    "ThreadControl": {
        "WorkerThreadCount": 4,
        "SyncMechanism": "Mutex",
        "WorkerThreadMigration": false,
        "LoadBalancing": false,
        "LoadBalancingMetric": "EventExecutionRatio",
        "LoadBalancingTrigger": "Rollback",
        "LoadBalancingVarianceThresh": 0.2,
        "LoadBalancingNormalInterval": 3,
        "LoadBalancingNormalThresh": 5,
        "LoadBalancingRelaxedInterval": 15,
        "LoadBalancingRelaxedThresh": 2
    },
    
    // Type Options:
    //     Default, MultiSet (must use if using MultiSet event list)
    // ThreadedTimewarp has only MultiSet Scheduler
    // Overall Schedule Queue Scheme Options:
    //     MultiSet
    //     LadderQueue
    //     SplayTree
    // Ladder Queue Causality (not available for the other queues):
    //     Strict
    //     Relaxed
    // Schedule Queue count (changed based on WorkerThreadCount)
    "Scheduler": {
        "Type": "MultiSet",
        "ScheduleQScheme": "MultiSet",
        "CausalityType": "Strict",
        "ScheduleQCount": 2
    },
    
    // EventList:
    // Type Options:
    //     Default, MultiSet, Threaded
    // ThreadedTimewarp has only Multiset EventList
    "EventList": {
        "Type": "MultiSet"
    },

    // CommunicationManager:
    // PhysicalLayer Options:
    //     MPI      
    //     TCPSelect
    //     UDPSelect, not implemented yet
    // Type Options:
    //     Default
    //     MessageAggregating - Not fully implemented yet.
    "CommunicationManager": {
        "PhysicalLayer": "MPI",
        "Type": "Default"
    },
      
    // StateManager:
    // Type Options:
    // Periodic, Adaptive
    // Period Format:
    //     Must be an integer value
    "StateManager": {
        "Type": "Periodic",
        "Period": 10
    },

    // OutputManager:
    // Type Options:
    //     Lazy, Dynamic, Aggressive 
    // AntiMessages Options: 
    //     Default, One
    // FilterDepth, AggrToLazyRatio, LazyToAggrRatio & ThirdThreshold
    // are used for Dynamic Cancellation
    "OutputManager": {
        "Type": "Aggressive",
        "AntiMessages": "Default",
        "FilterDepth": 16,
        "AggrToLazyRatio": 0.5,
        "LazyToAggrRatio": 0.2,
        "ThirdThreshold": 0.1
    },

    // GVTManager
    // Type Options:
    //     Mattern, AtomicMattern
    // Period format:
    //     Must be an integer value
    "GVTManager": {
        "Type": "Mattern",
        "Period": 1000
    },

    // Optimistic Fossil Collection Manager
    // Type Options:
    //     None, Cheby
    "OptFossilCollManager": {
        "Type": "None",
        "CheckpointTime": 2500,
        "MinimumSamples": 64,
        "MaximumSamples": 100,
        "DefaultLength": 20000,
        "AcceptableRisk": 0.99
    },

    // DVFS Manager
    // See Ryan Child's MS thesis
    //
    // Type: None | Shared | Distributed
    //   None - do not use DVFS
    //   Shared - LP0 sets frequencies of all other LPs
    //   Distributed - each LP sets its own frequency
    // Algorithm: Fixed | Performance | Power | Hybrid
    //   Various DVFS algorithms, see DVFSManager.h for details
    // UsefulWorkMetric: Rollbacks | EffectiveUtilization | RollbackFraction
    //   Various useful work metrics, see DVFSManager.h for details
    // Threshold: Float
    //   Minimum distance from average the Useful Work Index must be for possible 
    //   frequency adjustment
    // DebugPrint: true | false
    //   Whether to print useful work / frequency information each cycle
    // Period: Integer
    //   Interval in seconds at which to measure useful work and change freqs
    // FIRSize: Integer
    //   Size of FIR filter on the useful work whose output is used to set freqs
    "DVFSManager": {
        "Type": "None",
        "Algorithm": "Performance",
        "UsefulWorkMetric": "RollbackFraction",
        "Threshold": 0.1,
        "DebugPrint": false,
        "Period": 1,
        "FIRSize": 1
    },

    // Simulation Object Partitioning
    // 
    // Type: Default | RoundRobin | Greedy | ProfileGuided
    //   RoundRobin - Partition simulation objects equally between partitions
    //                such that consecutive objects will be placed in
    //                consecutive partitions.
    //   Greedy - Partition simulation objects equally between partitions such
    //            that consecutive objects will be placed on the same
    //            partition, as much as possible.
    //   ProfileGuided - Use statistics data from a previous sequential 
    //                   run to perform partitioning.
    //   Default - If a model defines a custom partitioner use it, otherwise 
    //             use RoundRobin.
    // StatisticsFile
    //   The path to the statistics file that was created from a previous run.
    //   Only used if the Type is ProfileGuided.
    "Partitioner": {
        "Type": "Default",
        "StatisticsFile": "statistics.metis"
    }
  }
}
